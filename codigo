import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class Logger {
    private String mode;
    private String fileName;
    private static final String RESET = "\033[0m";
    private static final String GREEN = "\033[92m";
    private static final String YELLOW = "\033[93m";
    private static final String RED = "\033[91m";

    public Logger(String mode, String fileName) {
        this.mode = mode;
        this.fileName = fileName;
    }

    public void log(String message, String level) {
        String timestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
        String formattedMessage = timestamp + " - " + level + " - " + message;

        if (mode.equals("console")) {
            logToConsole(formattedMessage, level);
        } else if (mode.equals("file")) {
            logToFile(formattedMessage);
        } else {
            throw new IllegalArgumentException("Modo desconhecido. Use 'console' ou 'file'.");
        }
    }

    private void logToConsole(String message, String level) {
        String color;
        switch (level) {
            case "Debug":
                color = GREEN;
                break;
            case "Warning":
                color = YELLOW;
                break;
            case "Error":
                color = RED;
                break;
            default:
                color = RESET;
        }
        System.out.println(color + message + RESET);
    }

    private void logToFile(String message) {
        try {
            Files.write(Paths.get(fileName), (message + System.lineSeparator()).getBytes(), StandardOpenOption.CREATE, StandardOpenOption.APPEND);
        } catch (IOException e) {
            System.out.println("Erro ao salvar arquivo");
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        Logger consoleLogger = new Logger("console", null);
        consoleLogger.log("Esta é uma mensagem de debug.", "Debug");
        consoleLogger.log("Esta é uma mensagem de aviso.", "Warning");
        consoleLogger.log("Esta é uma mensagem de erro.", "Error");

        Logger fileLogger = new Logger("file", "log.txt");
        fileLogger.log("Esta é uma mensagem de debug armazenada em arquivo.", "Debug");
        fileLogger.log("Esta é uma mensagem de aviso armazenada em arquivo.", "Warning");
        fileLogger.log("Esta é uma mensagem de erro armazenada em arquivo.", "Error");
    }
}
